{
  "name": "brick",
  "description": "UI Web Components for Mobile Web Apps",
  "version": "1.0.4beta",
  "keywords": [
    "brick",
    "custom",
    "elements",
    "x-tag"
  ],
  "main": [
    "dist/brick.js",
    "dist/brick.css",
    "dist/OpenSans-SemiBold.ttf"
  ],
  "gitHead": "422218f9313541bf8cc7ff5461d527a77424b8fa",
  "readme": "Brick / App-components\n==============\n\nBrick is a bundle of re-usable UI components built with [x-tags](http://www.x-tags.org/) for quickly and flexibly building mobile HTML5 apps. Brick adds new HTML tags- widgets that allow developers to express the structure of an application in a clearer, more concise manner.\n\nIn other words, Brick provides minimal-markup, cross-browser implementations of common user interface designs, from calendars to slidebars to cycleable galleries, taking care of most of the under-the-hood boilerplate for you.\n\nFor example, this is all the markup that would be needed to implement a mobile-friendly, cross-browser calendar widget:\n\n```\n<x-calendar></x-calendar>\n```\n\nThat's it! It really is that easy.\n\n#Installation\n\nPrebuilt versions of the entire library are provided in <code>dist/brick.css</code> and <code>dist/brick.js</code>, and should be included in your project like any other CSS/JavaScript file.\n\nIn the near future, compartmentalized releases of specific components will be released in their respective folders under <code>dist</code>, allowing you to pick and choose what components you want. (Do not use these yet, as dependencies have not been created yet.)\n\n## Building from the repository source \n\nIf you wish to build the library yourself, first have <code>npm</code> installed. You'll also need the ability to run <code>make</code>, so Windows users may need to install Cygwin, [making sure to install the <code>make</code> package](http://superuser.com/questions/154418/where-do-i-get-make-for-cygwin).\n\nThen, run the following:\n\n```\ngit clone git@github.com:mozilla/brick.git\ncd brick\ngit submodule update --init --recursive\nnpm install\nmake\n```\n\nThe built files should be output to <code>dist/brick.css</code> and <code>dist/brick.js</code>.\n\n# Components\n\nThis is a list of the currently bundled components provided in the library. (Click to view subfolder with readme and demo page)\n\nFull documentation can be found on [the Brick site](http://mozilla.github.io/brick/).\n\n## Structural Components\n\n### ['Layout'](component/layout)\n\n* Primary layout container, holds app structure.\n* Allows whole \"app\" space to have layout properties like flexbox without affecting <body>\n\n### ['App Bar' (header)](https://github.com/x-tag/appbar)\n\n* Contains top-level information and UI\n* Similar to a toolbar or roughly equivalent to Android's action bar\n\n### ['Tab Bar' (navigation, footer)](component/tabbar)\n\n* Used to display an app-level navigation at the bottom of the UI\n* Usually a series of icons with labels.\n* Tabs are linked to panels/views. Changing tab changes the active panel, and changing the active panel changes the tab\n* Essentially fires a 'show' event at targeted elements. It is up to target elements to respond appropriately.\n    - Components with default support for show event:\n        - Slidebox\n        - Flipbox\n        - Deck\n* Can also fire user-defined events\n\n### ['Slidebox'](https://github.com/x-tag/slidebox)\n\n* Allows a 'slide' filmstrip effect between views or panels\n\n### ['Flipbox'](https://github.com/x-tag/flipbox)\n\n* Similar to slidebox, but with a perspective flip effect.\n* May be combinable with slidebox and accessed via an option\n\n### ['Deck' ('Cycle'/'Gallery')](component/deck)\n\n* Like a combination of slidebox and flipbox\n* A gallery box in which slides can be cycled in and out independently, with a variety of different transitions\n* Transition types can be switched and overridden on the fly, allowing for a \n  variety of different entrances/exits\n\n### ['Tooltip' (Callout)](component/tooltip)\n\n* Content container that appears over current view context\n* Associated with a trigger element in the underlying content\n* Does not necessarily block interaction with underlying content\n\n## Content Components\n\n### [Calendar](component/calendar)\n\n* A calendar widget based on/extended from [fortnight.js](https://github.com/potch/fortnight.js), but in a web component format\n* Simple instantiation, with API hooks to allow flexible use cases such as an event-managing calendar (see demo)\n\n### [Datepicker](component/datepicker)\n\n* A polyfill for &lt;input type='date'&gt;, regardless of native browser support for date inputs\n* Ability to select a date and submit its ISO string to a server\n* Extends upon x-calendar to provide a calendar view\n\n### [Icon Button](component/iconbutton)\n\n* A simple UI component that creates a button with both an icon and a label\n* Allows multiple anchor locations of the icon and saves the developer from the headache of correctly CSS-centering contents\n\n### [Slider](component/slider)\n\n* Polyfill on top of &lt;input type='range'&gt;, providing a consistent UI regardless of whether type=\"range\" is supported or not.\n\n### [Toggle](https://github.com/x-tag/toggle)\n\n* Unifies checkboxes and radios into a single consistent UI component\n\n### [Togglegroup (aka Option Bar)](component/togglegroup)\n\n* A set of associated options of which only one can be selected at a time\n* Designed to appear as a cohesive set\n* Essentially several Toggles with the appearance of option buttons",
  "readmeFilename": "README.md",
  "_id": "brick@0.1.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/mozilla/brick.git"
  }
}