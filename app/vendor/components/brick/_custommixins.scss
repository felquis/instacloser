$IMG_FOLDER: "../images/";
$FONTS_FOLDER: "../fonts/";

// http://stackoverflow.com/a/12335841
@function strip-units($number) {
    @return $number / ($number * 0 + 1);
}

@mixin mobileMediaOverride{
    @media only screen and (max-device-width : 1024px){
        @content;
    }
}

@mixin boxSizing($value){
    -webkit-box-sizing: $value;
    -moz-box-sizing: $value;
    -ms-box-sizing: $value;
    -o-box-sizing: $value;
    box-sizing: $value;
}

@mixin backfaceVisibility($value){
    -webkit-backface-visibility: $value;
    -moz-backface-visibility: $value;
    -ms-backface-visibility: $value;
    -o-backface-visibility: $value;
    backface-visibility: $value;
}

@mixin perspective($val){
    -webkit-perspective: $val;
    -moz-perspective: $val;
    -o-perspective: $val;
    -ms-perspective: $val;
    perspective: $val;
}

@mixin customFont($fileName, $fontFolder: $FONTS_FOLDER, $fontFamily: false, $fontExt: ".ttf", 
                  $fontWeight: normal, $fontStyle: normal, $format: "truetype", $localNames: false){
    @if ($localNames == false){
        $localNames: ($fileName);
    }

    $localSrcs: ();
    @each $localName in $localNames{
        $localSrcs: append($localSrcs, local("#{$localName}"), space);
    }

    @font-face {
        @if ($fontFamily == false){
            font-family: $fileName;
        }
        @else{
            font-family: $fontFamily;
        }
        font-weight: $fontWeight;
        font-style: $fontStyle;
        font-variant: $fontStyle;
        src: $localSrcs url("#{$fontFolder}#{$fileName}#{$fontExt}") format($format);
    }
}

@function replaceItem($list, $oldItem, $newItem, $separator: comma){
    @if type-of($list) == list{
        $newList: ();
        @each $item in $list{
            @if $item == $oldItem{
                $newList: append($newList, $newItem, $separator);
            }
            @else{
                $newList: append($newList, $item, $separator);
            }
        }
        @return $newList;
    }
    @else if $list == $oldItem{
        @return $newItem;
    }
    @else{
        @return $list;
    }
}

@mixin animated($properties: all, $durations: 0.2s, $timings:ease-in, $delays: 0s){
    transition-property: $properties;
    -webkit-transition-property: replaceItem($properties, transform, 
                                             -webkit-transform);
    -moz-transition-property: replaceItem($properties, transform, 
                                          -moz-transform);
    -ms-transition-property: replaceItem($properties, transform, 
                                        -o-transform);
    -o-transition-property: replaceItem($properties, transform, 
                                        -o-transform);
    
    transition-duration: $durations;
    -webkit-transition-duration: $durations;
    -moz-transition-duration: $durations;
    -ms-transition-duration: $durations;
    -o-transition-duration: $durations;
    
    -webkit-transition-timing-function:$timings;
    -moz-transition-timing-function:$timings;
    -ms-transition-timing-function:$timings;
    -o-transition-timing-function:$timings;
    transition-timing-function:$timings;
    
    -webkit-transition-delay:$delays;
    -moz-transition-delay:$delays;
    -ms-transition-delay:$delays;
    -o-transition-delay:$delays;
    transition-delay:$delays;
}

@mixin transformed($transform){
    transform:$transform;
    -ms-transform:$transform; // IE 9
    -moz-transform:$transform; // Firefox
    -webkit-transform:$transform; // Safari and Chrome
    -o-transform:$transform; // Opera
}

@mixin absoluteCentered(){
    position:absolute;
    left: 50%;
    top: 50%;
    -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    -o-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
}

@mixin shadowed($color:grey){
    box-shadow: 1px 1px 4px $color;
}

@mixin clickable{
    cursor: pointer;
}

@mixin movable{
    cursor: move;
}

@mixin unhighlightable{
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    
    -webkit-tap-highlight-color: transparent;
    -moz-tap-highlight-color: transparent;
    tap-highlight-color: transparent;
}

@mixin highlightable{
    -webkit-touch-callout: text;
    -webkit-user-select: text;
    -khtml-user-select: text;
    -moz-user-select: text;
    -ms-user-select: text;
    user-select: text;
}

@mixin rounded($radius: 4px){
    border-radius: $radius;
}

@mixin spriteIcon($imgName, $width:auto, $height:auto, $fill:true, $imgFolder: $IMG_FOLDER){
    background-image: url("#{$imgFolder}#{$imgName}");
    background-repeat: no-repeat;
    background-position: center center;
    width: $width;
    height: $height;
    
    @if ($fill){
        background-size: contain;
    }
}

@mixin simplegradient($base: #ffffff, $glossy: false){
    $darker: darken($base, 15%);
    background-color: $base;
    background-repeat: no-repeat;
    
    @if $glossy{
        background-image: -o-linear-gradient(top, $base, $base 50%, $darker 50%, $darker);
        background-image: -ms-linear-gradient(top, $base, $base 50%, $darker 50%, $darker);
        background-image: -moz-linear-gradient(top, $base, $base 50%, $darker 50%, $darker);
        background-image: -webkit-linear-gradient(top, $base, $base 50%, $darker 50%, $darker);
        background-image: linear-gradient(top, $base, $base 50%, $darker 50%, $darker);
    }
    @else{
        background-image: -o-linear-gradient(top, $base, $base 25%, $darker);
        background-image: -ms-linear-gradient(top, $base, $base 25%, $darker);
        background-image: -moz-linear-gradient(top, $base, $base 25%, $darker);
        background-image: -webkit-linear-gradient(top, $base, $base 25%, $darker);
        background-image: linear-gradient(top, $base, $base 25%, $darker);
    }
}

//from here: http://css-tricks.com/snippets/css/a-guide-to-flexbox/
@mixin flexbox() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

@mixin flex($values) {
    min-width: auto;
    min-height: auto;
    -webkit-box-flex: $values;
    -moz-box-flex:  $values;
    -webkit-flex:  $values;
    -ms-flex:  $values;
    box-flex: $values;
    flex:  $values;
}

@mixin align-items($align){
    -webkit-align-items: $align;
    -moz-align-items: $align;
    -ms-align-items: $align;
    align-items: $align;
}

@mixin align-content($align){
    -webkit-align-content: $align;
    -moz-align-content: $align;
    -ms-align-content: $align;
    align-content: $align;
}

@mixin justify-content($just){
    -webkit-justify-content: $just;
    -moz-justify-content: $just;
    -ms-justify-content: $just;
    justify-content: $just;
}

@mixin order($val) {
  -webkit-box-ordinal-group: $val;  
  -moz-box-ordinal-group: $val;     
  -ms-flex-order: $val;     
  -webkit-order: $val;  
  order: $val;
}
